{"title":"Docker的安装和部署","uid":"8e903f5d8f6275843e8b600d4505da68","slug":"Docker的安装和部署","date":"2020-05-26T09:33:20.000Z","updated":"2022-10-24T03:46:08.359Z","comments":true,"path":"api/articles/Docker的安装和部署.json","keywords":null,"cover":"/images/docker/docker.png","content":"<p><img src=\"/images/Docker%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E9%83%A8%E7%BD%B2/1240.png\" alt=\"Docker1.png\"></p>\n<h2 id=\"在Ubuntu中安装Docker\"><a href=\"#在Ubuntu中安装Docker\" class=\"headerlink\" title=\"在Ubuntu中安装Docker\"></a>在Ubuntu中安装Docker</h2><p>要安装Docker Engine，您需要以下Ubuntu版本之一的64位版本：</p>\n<ul>\n<li>Ubuntu Eoan 19.10</li>\n<li>Ubuntu Bionic 18.04（LTS）</li>\n<li>Ubuntu Xenial 16.04（LTS）</li>\n<li>其他最新版本</li>\n</ul>\n<h3 id=\"安装前的检查\"><a href=\"#安装前的检查\" class=\"headerlink\" title=\"安装前的检查\"></a>安装前的检查</h3><ol>\n<li>检查内核版本<br>Docker需要3.10+内核的linux操作系统。<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ uname -a\nLinux ubuntu 5.4.0-26-generic #30-Ubuntu SMP Mon Apr 20 16:58:30 UTC 2020 x86_64 x86_64 x86_64 GNU&#x2F;Linux</code></pre></li>\n<li>检查Device Mapper<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ ls -l &#x2F;sys&#x2F;class&#x2F;misc&#x2F;device-mapper\nlrwxrwxrwx 1 root root 0 May 24 08:45 &#x2F;sys&#x2F;class&#x2F;misc&#x2F;device-mapper -&gt; ..&#x2F;..&#x2F;devices&#x2F;virtual&#x2F;misc&#x2F;device-mapper</code></pre>\n<h3 id=\"卸载旧的版本\"><a href=\"#卸载旧的版本\" class=\"headerlink\" title=\"卸载旧的版本\"></a>卸载旧的版本</h3></li>\n<li>较旧的Docker版本名称为docker，docker.io或docker-engine。 如果已安装，请卸载它们：<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ sudo apt-get remove docker docker-engine docker.io containerd runc</code></pre>\n如果提示以下结果,说明系统中没有安装较久版本的Docker。<pre class=\"line-numbers language-none\"><code class=\"language-none\">Reading package lists... Done\nBuilding dependency tree       \nReading state information... Done\nE: Unable to locate package docker-engine</code></pre>\n<h3 id=\"设置存储库\"><a href=\"#设置存储库\" class=\"headerlink\" title=\"设置存储库\"></a>设置存储库</h3></li>\n<li>更新apt软件包索引并安装软件包以允许apt通过HTTPS使用存储库：</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ sudo apt-get update\n\n$ sudo apt-get install \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    gnupg-agent \\\n    software-properties-common</code></pre>\n<ol start=\"2\">\n<li>添加Docker的官方GPG密钥：</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ curl -fsSL https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;ubuntu&#x2F;gpg | sudo apt-key add -\nOK</code></pre>\n<p>通过搜索指纹的后8个字符，验证您现在是否拥有带有指纹的密钥 。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo apt-key fingerprint 0EBFCD88\npub   rsa4096 2017-02-22 [SCEA]\n         9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88\nuid    [ unknown] Docker Release (CE deb) &lt;docker@docker.com&gt;\nsub   rsa4096 2017-02-22 [S]</code></pre>\n<ol start=\"3\">\n<li>使用以下命令来设置稳定的存储库。<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ sudo add-apt-repository \\\n   &quot;deb [arch&#x3D;amd64] https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;ubuntu \\\n   $(lsb_release -cs) \\\n   stable&quot;</code></pre>\n<h3 id=\"安装Docker\"><a href=\"#安装Docker\" class=\"headerlink\" title=\"安装Docker\"></a>安装Docker</h3></li>\n<li>更新apt包索引，并安装最新版本的Docker Engine和容器。<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ sudo apt-get update\n$ sudo apt-get install docker-ce docker-ce-cli containerd.io</code></pre></li>\n<li>通过运行<code>hello-world</code> 映像来验证是否正确安装了Docker Engine 。<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ sudo docker run hello-world\nHello from Docker!\nThis message shows that your installation appears to be working correctly.\n\nTo generate this message, Docker took the following steps:\n 1. The Docker client contacted the Docker daemon.\n 2. The Docker daemon pulled the &quot;hello-world&quot; image from the Docker Hub.\n    (amd64)\n 3. The Docker daemon created a new container from that image which runs the\n    executable that produces the output you are currently reading.\n 4. The Docker daemon streamed that output to the Docker client, which sent it\n    to your terminal.</code></pre>\n终端出现Hello from Docker!提示，说明Docker已经成功的安装到您的系统中。</li>\n</ol>\n<h2 id=\"配置阿里云镜像加速\"><a href=\"#配置阿里云镜像加速\" class=\"headerlink\" title=\"配置阿里云镜像加速\"></a>配置阿里云镜像加速</h2><ol>\n<li><p>登陆阿里云后再产品中找到容器镜像服务。<br><img src=\"/images/Docker%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E9%83%A8%E7%BD%B2/1240-20221024113930643.png\" alt=\"阿里云1.png\"></p>\n</li>\n<li><p>进入控制台后点击镜像工具-镜像加速器。<br><img src=\"/images/Docker%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E9%83%A8%E7%BD%B2/1240-20221024113935307.png\" alt=\"阿里云2.png\"></p>\n</li>\n<li><p>根据操作文档配置镜像加速。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ sudo mkdir -p &#x2F;etc&#x2F;docker\n$ sudo tee &#x2F;etc&#x2F;docker&#x2F;daemon.json &lt;&lt;-&#39;EOF&#39;\n&#123;\n  &quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;&lt;加速器地址&gt;&quot;]\n&#125;\nEOF\n$ sudo systemctl daemon-reload\n$ sudo systemctl restart docker</code></pre></li>\n</ol>\n","feature":true,"text":" 在Ubuntu中安装Docker要安装Docker Engine，您需要以下Ubuntu版本之一的64位版本： Ubuntu Eoan 19.10 Ubuntu Bionic 18.04（LTS） Ubuntu Xenial 16.04（LTS） 其他最新版本 安装前的检查 检...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"Docker","slug":"Docker","count":4,"path":"api/categories/Docker.json"}],"tags":[{"name":"Docker","slug":"Docker","count":4,"path":"api/tags/Docker.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9C%A8Ubuntu%E4%B8%AD%E5%AE%89%E8%A3%85Docker\"><span class=\"toc-text\">在Ubuntu中安装Docker</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E5%89%8D%E7%9A%84%E6%A3%80%E6%9F%A5\"><span class=\"toc-text\">安装前的检查</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8D%B8%E8%BD%BD%E6%97%A7%E7%9A%84%E7%89%88%E6%9C%AC\"><span class=\"toc-text\">卸载旧的版本</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E7%BD%AE%E5%AD%98%E5%82%A8%E5%BA%93\"><span class=\"toc-text\">设置存储库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85Docker\"><span class=\"toc-text\">安装Docker</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E9%98%BF%E9%87%8C%E4%BA%91%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F\"><span class=\"toc-text\">配置阿里云镜像加速</span></a></li></ol>","author":{"name":"Johnny","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"Welcome to my blog <br/> I'm Johnny Bao.-a DevOps.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Nginx负载均衡","uid":"a4200f3b83fd12fc52df8fa786ffcf93","slug":"Nginx负载均衡","date":"2020-06-24T12:21:33.000Z","updated":"2022-10-24T03:19:10.335Z","comments":true,"path":"api/articles/Nginx负载均衡.json","keywords":null,"cover":"/images/Nginx负载均衡/nginx-bg.jpg","text":" 上篇文章讲了nginx的常见模块，这边文章将为大家讲一下nginx的负载均衡。 1.准备工作这里我用三台服务器来做演示： Nginx负载均衡:192.168.10.22:80 Nginx Web1:192.168.10.23:80 Nginx Web2:192.168.10.2...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"Nginx","slug":"Nginx","count":2,"path":"api/categories/Nginx.json"}],"tags":[{"name":"Nginx","slug":"Nginx","count":2,"path":"api/tags/Nginx.json"},{"name":"Linux","slug":"Linux","count":4,"path":"api/tags/Linux.json"},{"name":"教程","slug":"教程","count":3,"path":"api/tags/教程.json"}],"author":{"name":"Johnny","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"Welcome to my blog <br/> I'm Johnny Bao.-a DevOps.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Docker相关技术简介","uid":"ae3533aad9ffb390f0136b0f330276f7","slug":"Docker相关技术简介","date":"2020-05-12T14:14:20.000Z","updated":"2022-10-24T03:34:50.335Z","comments":true,"path":"api/articles/Docker相关技术简介.json","keywords":null,"cover":"/images/docker/docker.png","text":" Docker 是一个开源的应用容器引擎，基于Go 语言并遵从 Apache2.0 协议开源。Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。 Docker简介什么是容器？容器是一种虚拟化...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"Docker","slug":"Docker","count":4,"path":"api/categories/Docker.json"}],"tags":[{"name":"Docker","slug":"Docker","count":4,"path":"api/tags/Docker.json"}],"author":{"name":"Johnny","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"Welcome to my blog <br/> I'm Johnny Bao.-a DevOps.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}