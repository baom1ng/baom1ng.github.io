{"title":"Docker的基础命令","uid":"6ec80148ccdf0bae5b573fc594b500be","slug":"Docker的基础命令","date":"2022-09-29T07:03:20.000Z","updated":"2022-10-24T03:55:52.284Z","comments":true,"path":"api/articles/Docker的基础命令.json","keywords":null,"cover":"/images/docker/docker.png","content":"<p><img src=\"/images/docker/docker.png\" alt=\"Docker1.png\"></p>\n<h3 id=\"帮助命令\"><a href=\"#帮助命令\" class=\"headerlink\" title=\"帮助命令\"></a>帮助命令</h3><hr>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker version             #显示docker的版本信息\ndocker info                #显示dcoker的系统信息，包括镜像和容器的数量\ndocker [命令] --help        #帮助命令</code></pre>\n<p>docker官方文档地址：<a href=\"https://docs.docker.com/compose/reference/\">https://docs.docker.com/compose/reference/</a></p>\n<h3 id=\"镜像命令\"><a href=\"#镜像命令\" class=\"headerlink\" title=\"镜像命令\"></a>镜像命令</h3><hr>\n<p><strong>docker images</strong> 查看所有本地主机上的镜像</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[root@vm22 ~]# docker images\nREPOSITORY            TAG       IMAGE ID       CREATED         SIZE\nwaibi&#x2F;centos          1.0       161ad1397191   7 hours ago     231MB\ntomcat                2.0       8663b1d60f71   8 hours ago     684MB\nnginx                 latest    605c77e624dd   9 months ago    141MB\n#解释\nREPOSITORY    镜像的仓库源\nTAG           镜像的标签\nIMAGE ID      镜像的ID\nCREATED       镜像的创建时间\nSIZE          镜像的大小\n#可选项\n-a --all      显示所有镜像\n-q --quiet    只显示景象ID</code></pre>\n<p><strong>docker search</strong> 搜索镜像</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[root@vm22 ~]# docker search mysql\nNAME                            DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED\nmysql                           MySQL is a widely used, open-source relation…   13234     [OK]       \nmariadb                         MariaDB Server is a high performing open sou…   5062      [OK]       \n#可选项\n--filter&#x3D;starts&#x3D;3000    #搜索出来镜像starts大于3000的镜像</code></pre>\n<p><strong>docker pull</strong> 下载镜像</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">下载镜像 $ docker pull 镜像名[:tag]\n[root@vm22 ~]# docker pull mysql\nUsing default tag: latest  #如果指定tag，将默认下载latest\nlatest: Pulling from library&#x2F;mysql\n72a69066d2fe: Already exists  #分层下载\n93619dbc5b36: Already exists \n99da31dd6142: Already exists \n626033c43d70: Already exists \n37d5d7efb64e: Already exists \nac563158d721: Already exists \nd2ba16033dad: Already exists \n688ba7d5c01a: Pull complete \n00e060b6d11d: Pull complete \n1c04857f594f: Pull complete \n4d7cfa90e6ea: Pull complete \ne0431212d27d: Pull complete \nDigest: sha256:e9027fe4d91c0153429607251656806cc784e914937271037f7738bd5b8e7709 #签名\nStatus: Downloaded newer image for mysql:latest\ndocker.io&#x2F;library&#x2F;mysql:latest #真实地址</code></pre>\n<p><strong>docker rmi</strong> 删除镜像</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[root@vm22 ~]# docker rmi -f 3218b38490ce #删除指定镜像\n[root@vm22 ~]# docker rmi -f IMAGE ID IMAGE ID #删除多个镜像\n[root@vm22 ~]# docker rmi -f $(docker images -aq) #删除全部镜像</code></pre>\n<h3 id=\"容器命令\"><a href=\"#容器命令\" class=\"headerlink\" title=\"容器命令\"></a>容器命令</h3><hr>\n<p><strong>启动容器</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ docker run IMAGE [COMMAND] [ARG...]\n# 参数说明\n--name&#x3D;&quot;name&quot;  给容器命名\n-d  后台运行\n-it  使用交互方式运行，进入容器查看内容\n-p  指定容器端口 -p 8080:8080\n        -p 主机端口:容器端口\n        -p IP:主机端口:容器端口\n-P  随机指定端口\n\n#启动并进入容器\n[root@vm22 ~]# docker run -it centos &#x2F;bin&#x2F;bash\n[root@bdcf79e05d39 &#x2F;]# ls  # 查看容器内的centos\nbin  dev  etc  home  lib  lib64  lost+found  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var\n[root@bdcf79e05d39 &#x2F;]# exit  # 退出容器 \nexit</code></pre>\n<p><strong>列出所有正在运行的容器</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># docker ps 命令\n-a # 列出当前正在运行的容器+历史运行过的容器\n-n&#x3D;?  # 显示最近创建的容器\n-q  # 只显示容器ID\n[root@vm22 ~]# docker ps\nCONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES\n[root@vm22 ~]# docker ps -a\nCONTAINER ID   IMAGE     COMMAND       CREATED         STATUS                          PORTS     NAMES\nbdcf79e05d39   centos    &quot;&#x2F;bin&#x2F;bash&quot;   3 minutes ago   Exited (0) About a minute ago             brave_jepsen</code></pre>\n<p><strong>退出容器</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">exit  # 直接停止并退出容器\nCtrl + P + Q  # 容器不停止退出</code></pre>\n<p><strong>删除容器</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker rm 容器id  #删除指定容器\ndocker rm -f $(docker ps -aq)  # 删除所有容器</code></pre>\n<p><strong>启动和停止容器操作</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker start 容器ID    # 启动容器\ndocker stop 容器ID    # 停止当前正在运行的容器\ndocker restart 容器ID    # 重启容器\ndocker kill 容器ID    # 强制停止容器</code></pre>\n<h3 id=\"其他常用命令\"><a href=\"#其他常用命令\" class=\"headerlink\" title=\"其他常用命令\"></a>其他常用命令</h3><hr>\n<p><strong>后台启动容器</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 命令 doceker run -d 镜像\n[root@vm22 ~]# docker run -d centos</code></pre>\n<p><strong>查看日志</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker logs -f -t --tail 容器\n# 测试\n[root@vm22 ~]# docker run -d centos &#x2F;bin&#x2F;bash -c &quot;while true;do echo print logs;sleep 1;done &quot;\n[root@vm22 ~]# docker ps\nCONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS     NAMES\n82bb167358c7   centos    &quot;&#x2F;bin&#x2F;bash -c &#39;while…&quot;   34 seconds ago   Up 33 seconds             hungry_mclean\n# 显示日志\n  -tf \n  --tail number\n[root@vm22 ~]# docker logs -t -f --tail 4 82bb167358c7\n2022-09-28T17:41:05.146127148Z print logs\n2022-09-28T17:41:06.151409147Z print logs\n2022-09-28T17:41:07.157108266Z print logs\n2022-09-28T17:41:08.161395599Z print logs</code></pre>\n<p><strong>查看容器中进程信息</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 命令 docker top 容器ID\n[root@vm22 ~]# docker top 82bb167358c7\nUID                 PID                 PPID                C                   STIME               TTY                 TIME                CMD\nroot                4773                4753                0                   01:39               ?                   00:00:00            &#x2F;bin&#x2F;bash -c while true;do echo print logs;sleep 1;done\nroot                5172                4773                0                   01:44               ?                   00:00:00            &#x2F;usr&#x2F;bin&#x2F;coreutils --coreutils-prog-shebang&#x3D;sleep &#x2F;usr&#x2F;bin&#x2F;sleep 1</code></pre>\n<p> <strong>查看镜像的元数据</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 命令 docker inspect 容器ID\n[root@vm22 ~]# docker inspect 82bb167358c7\n[\n    &#123;\n        &quot;Id&quot;: &quot;82bb167358c7835cae235ad9d3ba2097e5d63ecd7286de50fb26061467d9ef4b&quot;,\n        &quot;Created&quot;: &quot;2022-09-28T17:39:20.314052558Z&quot;,\n        &quot;Path&quot;: &quot;&#x2F;bin&#x2F;bash&quot;,\n        &quot;Args&quot;: [\n            &quot;-c&quot;,\n            &quot;while true;do echo print logs;sleep 1;done &quot;\n        ],\n        &quot;State&quot;: &#123;\n            &quot;Status&quot;: &quot;running&quot;,\n            &quot;Running&quot;: true,\n            &quot;Paused&quot;: false,\n            &quot;Restarting&quot;: false,\n            &quot;OOMKilled&quot;: false,\n            &quot;Dead&quot;: false,\n            &quot;Pid&quot;: 4773,\n            &quot;ExitCode&quot;: 0,\n            &quot;Error&quot;: &quot;&quot;,\n            &quot;StartedAt&quot;: &quot;2022-09-28T17:39:20.57549319Z&quot;,\n            &quot;FinishedAt&quot;: &quot;0001-01-01T00:00:00Z&quot;\n        &#125;,\n        &quot;Image&quot;: &quot;sha256:5d0da3dc976460b72c77d94c8a1ad043720b0416bfc16c52c45d4847e53fadb6&quot;,\n        &quot;ResolvConfPath&quot;: &quot;&#x2F;var&#x2F;lib&#x2F;docker&#x2F;containers&#x2F;82bb167358c7835cae235ad9d3ba2097e5d63ecd7286de50fb26061467d9ef4b&#x2F;resolv.conf&quot;,\n        &quot;HostnamePath&quot;: &quot;&#x2F;var&#x2F;lib&#x2F;docker&#x2F;containers&#x2F;82bb167358c7835cae235ad9d3ba2097e5d63ecd7286de50fb26061467d9ef4b&#x2F;hostname&quot;,\n        &quot;HostsPath&quot;: &quot;&#x2F;var&#x2F;lib&#x2F;docker&#x2F;containers&#x2F;82bb167358c7835cae235ad9d3ba2097e5d63ecd7286de50fb26061467d9ef4b&#x2F;hosts&quot;,\n        &quot;LogPath&quot;: &quot;&#x2F;var&#x2F;lib&#x2F;docker&#x2F;containers&#x2F;82bb167358c7835cae235ad9d3ba2097e5d63ecd7286de50fb26061467d9ef4b&#x2F;82bb167358c7835cae235ad9d3ba2097e5d63ecd7286de50fb26061467d9ef4b-json.log&quot;,\n        &quot;Name&quot;: &quot;&#x2F;hungry_mclean&quot;,\n        &quot;RestartCount&quot;: 0,\n        &quot;Driver&quot;: &quot;overlay2&quot;,\n        &quot;Platform&quot;: &quot;linux&quot;,\n        &quot;MountLabel&quot;: &quot;&quot;,\n        &quot;ProcessLabel&quot;: &quot;&quot;,\n        &quot;AppArmorProfile&quot;: &quot;&quot;,\n        &quot;ExecIDs&quot;: null,\n        &quot;HostConfig&quot;: &#123;\n            &quot;Binds&quot;: null,\n            &quot;ContainerIDFile&quot;: &quot;&quot;,\n            &quot;LogConfig&quot;: &#123;\n                &quot;Type&quot;: &quot;json-file&quot;,\n                &quot;Config&quot;: &#123;&#125;\n            &#125;,\n            &quot;NetworkMode&quot;: &quot;default&quot;,\n            &quot;PortBindings&quot;: &#123;&#125;,\n            &quot;RestartPolicy&quot;: &#123;\n                &quot;Name&quot;: &quot;no&quot;,\n                &quot;MaximumRetryCount&quot;: 0\n            &#125;,\n            &quot;AutoRemove&quot;: false,\n            &quot;VolumeDriver&quot;: &quot;&quot;,\n            &quot;VolumesFrom&quot;: null,\n            &quot;CapAdd&quot;: null,\n            &quot;CapDrop&quot;: null,\n            &quot;CgroupnsMode&quot;: &quot;host&quot;,\n            &quot;Dns&quot;: [],\n            &quot;DnsOptions&quot;: [],\n            &quot;DnsSearch&quot;: [],\n            &quot;ExtraHosts&quot;: null,\n            &quot;GroupAdd&quot;: null,\n            &quot;IpcMode&quot;: &quot;private&quot;,\n            &quot;Cgroup&quot;: &quot;&quot;,\n            &quot;Links&quot;: null,\n            &quot;OomScoreAdj&quot;: 0,\n            &quot;PidMode&quot;: &quot;&quot;,\n            &quot;Privileged&quot;: false,\n            &quot;PublishAllPorts&quot;: false,\n            &quot;ReadonlyRootfs&quot;: false,\n            &quot;SecurityOpt&quot;: null,\n            &quot;UTSMode&quot;: &quot;&quot;,\n            &quot;UsernsMode&quot;: &quot;&quot;,\n            &quot;ShmSize&quot;: 67108864,\n            &quot;Runtime&quot;: &quot;runc&quot;,\n            &quot;ConsoleSize&quot;: [\n                0,\n                0\n            ],\n            &quot;Isolation&quot;: &quot;&quot;,\n            &quot;CpuShares&quot;: 0,\n            &quot;Memory&quot;: 0,\n            &quot;NanoCpus&quot;: 0,\n            &quot;CgroupParent&quot;: &quot;&quot;,\n            &quot;BlkioWeight&quot;: 0,\n            &quot;BlkioWeightDevice&quot;: [],\n            &quot;BlkioDeviceReadBps&quot;: null,\n            &quot;BlkioDeviceWriteBps&quot;: null,\n            &quot;BlkioDeviceReadIOps&quot;: null,\n            &quot;BlkioDeviceWriteIOps&quot;: null,\n            &quot;CpuPeriod&quot;: 0,\n            &quot;CpuQuota&quot;: 0,\n            &quot;CpuRealtimePeriod&quot;: 0,\n            &quot;CpuRealtimeRuntime&quot;: 0,\n            &quot;CpusetCpus&quot;: &quot;&quot;,\n            &quot;CpusetMems&quot;: &quot;&quot;,\n            &quot;Devices&quot;: [],\n            &quot;DeviceCgroupRules&quot;: null,\n            &quot;DeviceRequests&quot;: null,\n            &quot;KernelMemory&quot;: 0,\n            &quot;KernelMemoryTCP&quot;: 0,\n            &quot;MemoryReservation&quot;: 0,\n            &quot;MemorySwap&quot;: 0,\n            &quot;MemorySwappiness&quot;: null,\n            &quot;OomKillDisable&quot;: false,\n            &quot;PidsLimit&quot;: null,\n            &quot;Ulimits&quot;: null,\n            &quot;CpuCount&quot;: 0,\n            &quot;CpuPercent&quot;: 0,\n            &quot;IOMaximumIOps&quot;: 0,\n            &quot;IOMaximumBandwidth&quot;: 0,\n            &quot;MaskedPaths&quot;: [\n                &quot;&#x2F;proc&#x2F;asound&quot;,\n                &quot;&#x2F;proc&#x2F;acpi&quot;,\n                &quot;&#x2F;proc&#x2F;kcore&quot;,\n                &quot;&#x2F;proc&#x2F;keys&quot;,\n                &quot;&#x2F;proc&#x2F;latency_stats&quot;,\n                &quot;&#x2F;proc&#x2F;timer_list&quot;,\n                &quot;&#x2F;proc&#x2F;timer_stats&quot;,\n                &quot;&#x2F;proc&#x2F;sched_debug&quot;,\n                &quot;&#x2F;proc&#x2F;scsi&quot;,\n                &quot;&#x2F;sys&#x2F;firmware&quot;\n            ],\n            &quot;ReadonlyPaths&quot;: [\n                &quot;&#x2F;proc&#x2F;bus&quot;,\n                &quot;&#x2F;proc&#x2F;fs&quot;,\n                &quot;&#x2F;proc&#x2F;irq&quot;,\n                &quot;&#x2F;proc&#x2F;sys&quot;,\n                &quot;&#x2F;proc&#x2F;sysrq-trigger&quot;\n            ]\n        &#125;,\n        &quot;GraphDriver&quot;: &#123;\n            &quot;Data&quot;: &#123;\n                &quot;LowerDir&quot;: &quot;&#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;fcd02afc26d5c1aea385a6b77399b4ec4af0f356359e91041cde84cb9b1237c7-init&#x2F;diff:&#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;d95e550d4f62886c70a537524378ebfba5e96932146481454237df6005a0cb8c&#x2F;diff&quot;,\n                &quot;MergedDir&quot;: &quot;&#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;fcd02afc26d5c1aea385a6b77399b4ec4af0f356359e91041cde84cb9b1237c7&#x2F;merged&quot;,\n                &quot;UpperDir&quot;: &quot;&#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;fcd02afc26d5c1aea385a6b77399b4ec4af0f356359e91041cde84cb9b1237c7&#x2F;diff&quot;,\n                &quot;WorkDir&quot;: &quot;&#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;fcd02afc26d5c1aea385a6b77399b4ec4af0f356359e91041cde84cb9b1237c7&#x2F;work&quot;\n            &#125;,\n            &quot;Name&quot;: &quot;overlay2&quot;\n        &#125;,\n        &quot;Mounts&quot;: [],\n        &quot;Config&quot;: &#123;\n            &quot;Hostname&quot;: &quot;82bb167358c7&quot;,\n            &quot;Domainname&quot;: &quot;&quot;,\n            &quot;User&quot;: &quot;&quot;,\n            &quot;AttachStdin&quot;: false,\n            &quot;AttachStdout&quot;: false,\n            &quot;AttachStderr&quot;: false,\n            &quot;Tty&quot;: false,\n            &quot;OpenStdin&quot;: false,\n            &quot;StdinOnce&quot;: false,\n            &quot;Env&quot;: [\n                &quot;PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;sbin:&#x2F;bin&quot;\n            ],\n            &quot;Cmd&quot;: [\n                &quot;&#x2F;bin&#x2F;bash&quot;,\n                &quot;-c&quot;,\n                &quot;while true;do echo print logs;sleep 1;done &quot;\n            ],\n            &quot;Image&quot;: &quot;centos&quot;,\n            &quot;Volumes&quot;: null,\n            &quot;WorkingDir&quot;: &quot;&quot;,\n            &quot;Entrypoint&quot;: null,\n            &quot;OnBuild&quot;: null,\n            &quot;Labels&quot;: &#123;\n                &quot;org.label-schema.build-date&quot;: &quot;20210915&quot;,\n                &quot;org.label-schema.license&quot;: &quot;GPLv2&quot;,\n                &quot;org.label-schema.name&quot;: &quot;CentOS Base Image&quot;,\n                &quot;org.label-schema.schema-version&quot;: &quot;1.0&quot;,\n                &quot;org.label-schema.vendor&quot;: &quot;CentOS&quot;\n            &#125;\n        &#125;,\n        &quot;NetworkSettings&quot;: &#123;\n            &quot;Bridge&quot;: &quot;&quot;,\n            &quot;SandboxID&quot;: &quot;0cd61c994ce552f0c40d92076a80223aa1ca509814ced1ba2e05ca3006f800a1&quot;,\n            &quot;HairpinMode&quot;: false,\n            &quot;LinkLocalIPv6Address&quot;: &quot;&quot;,\n            &quot;LinkLocalIPv6PrefixLen&quot;: 0,\n            &quot;Ports&quot;: &#123;&#125;,\n            &quot;SandboxKey&quot;: &quot;&#x2F;var&#x2F;run&#x2F;docker&#x2F;netns&#x2F;0cd61c994ce5&quot;,\n            &quot;SecondaryIPAddresses&quot;: null,\n            &quot;SecondaryIPv6Addresses&quot;: null,\n            &quot;EndpointID&quot;: &quot;4791507c4b3d9221dcca506844705803e4d6faafeacfa206225650490224ba02&quot;,\n            &quot;Gateway&quot;: &quot;172.17.0.1&quot;,\n            &quot;GlobalIPv6Address&quot;: &quot;&quot;,\n            &quot;GlobalIPv6PrefixLen&quot;: 0,\n            &quot;IPAddress&quot;: &quot;172.17.0.2&quot;,\n            &quot;IPPrefixLen&quot;: 16,\n            &quot;IPv6Gateway&quot;: &quot;&quot;,\n            &quot;MacAddress&quot;: &quot;02:42:ac:11:00:02&quot;,\n            &quot;Networks&quot;: &#123;\n                &quot;bridge&quot;: &#123;\n                    &quot;IPAMConfig&quot;: null,\n                    &quot;Links&quot;: null,\n                    &quot;Aliases&quot;: null,\n                    &quot;NetworkID&quot;: &quot;2893fe225a852d859fb8e831ff668623b9f220c3f47a8b1b83bb31691a8961b5&quot;,\n                    &quot;EndpointID&quot;: &quot;4791507c4b3d9221dcca506844705803e4d6faafeacfa206225650490224ba02&quot;,\n                    &quot;Gateway&quot;: &quot;172.17.0.1&quot;,\n                    &quot;IPAddress&quot;: &quot;172.17.0.2&quot;,\n                    &quot;IPPrefixLen&quot;: 16,\n                    &quot;IPv6Gateway&quot;: &quot;&quot;,\n                    &quot;GlobalIPv6Address&quot;: &quot;&quot;,\n                    &quot;GlobalIPv6PrefixLen&quot;: 0,\n                    &quot;MacAddress&quot;: &quot;02:42:ac:11:00:02&quot;,\n                    &quot;DriverOpts&quot;: null\n                &#125;\n            &#125;\n        &#125;\n    &#125;\n]</code></pre>\n<p><strong>进入当前正在运行的容器</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 命令\ndocker exec -it 容器ID &#x2F;bin&#x2F;bahs  # 进入容器后开启一个新的终端\ndocker attch 容器ID # 进入容器正在执行的终端，不会启动新的进程</code></pre>\n<p><strong>从容器内拷贝文件到主机上</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker cp 容器ID:容器内路径 目标路径\n[root@vm22 ~]# docker cp cfb377b1b56f:&#x2F;home&#x2F;docker-cp &#x2F;home\n[root@vm22 ~]# ls &#x2F;home\ndocker-cp  docker-test-volume  mysql  test</code></pre>","feature":true,"text":" 帮助命令 docker version #显示docker的版本信息 docker info #显示dcoker的系统信息，包括镜像和容器的数量 docker [命令] --help #帮助命令 docker官方文档地址：https://docs.docker.com/comp...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"14 mins."},"categories":[{"name":"Docker","slug":"Docker","count":4,"path":"api/categories/Docker.json"}],"tags":[{"name":"Docker","slug":"Docker","count":4,"path":"api/tags/Docker.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B8%AE%E5%8A%A9%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">帮助命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%95%9C%E5%83%8F%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">镜像命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%B9%E5%99%A8%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">容器命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B6%E4%BB%96%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">其他常用命令</span></a></li></ol>","author":{"name":"Johnny","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"Welcome to my blog <br/> I'm Johnny Bao.-a DevOps.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Docker网络详解","uid":"2e8be22ca0c67568a1ab56634abc99c8","slug":"Docker网络详解","date":"2022-10-07T02:23:20.000Z","updated":"2022-10-24T04:09:18.317Z","comments":true,"path":"api/articles/Docker网络详解.json","keywords":null,"cover":"/images/docker/docker.png","text":" 理解Docker0ip addr #查看本机网络网卡有三个网络问题：Docker是如何处理容器网络访问的？ [root@vm22 ~]# docker run -d -P --name tomcat01 tomcat #查看容器内部网络地址 ip addr 或者 dcoker ...","link":"","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"Docker","slug":"Docker","count":4,"path":"api/categories/Docker.json"}],"tags":[{"name":"Docker","slug":"Docker","count":4,"path":"api/tags/Docker.json"}],"author":{"name":"Johnny","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"Welcome to my blog <br/> I'm Johnny Bao.-a DevOps.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Nginx快速入门","uid":"01b2f95cf7b3ad8e6df19f8a3034e6c8","slug":"Nginx快速入门","date":"2020-06-22T10:23:05.000Z","updated":"2022-10-20T08:51:47.811Z","comments":true,"path":"api/articles/Nginx快速入门.json","keywords":null,"cover":"/images/Nginx快速入门/nginx01.png","text":" Nginx(“engine x”)是一款是由俄罗斯的程序设计师Igor Sysoev所开发高性能的 Web和 反向代理 服务器，也是一个 IMAP/POP3/SMTP 代理服务器。在高连接并发的情况下，Nginx是Apache服务器不错的替代品。##安装Nginx这里我用Cen...","link":"","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[{"name":"Nginx","slug":"Nginx","count":2,"path":"api/categories/Nginx.json"}],"tags":[{"name":"Nginx","slug":"Nginx","count":2,"path":"api/tags/Nginx.json"},{"name":"Linux","slug":"Linux","count":4,"path":"api/tags/Linux.json"}],"author":{"name":"Johnny","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"Welcome to my blog <br/> I'm Johnny Bao.-a DevOps.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}