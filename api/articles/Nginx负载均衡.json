{"title":"Nginx负载均衡","uid":"a4200f3b83fd12fc52df8fa786ffcf93","slug":"Nginx负载均衡","date":"2020-06-24T12:21:33.000Z","updated":"2022-10-24T03:19:10.335Z","comments":true,"path":"api/articles/Nginx负载均衡.json","keywords":"Brevin, blog, 技术, 博客","cover":"/images/Nginx负载均衡/nginx-bg.jpg","content":"<p><img src=\"/images/Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/nginx01.png\" alt=\"nginx.png\"></p>\n<p>上篇文章讲了nginx的常见模块，这边文章将为大家讲一下nginx的负载均衡。</p>\n<h2 id=\"1-准备工作\"><a href=\"#1-准备工作\" class=\"headerlink\" title=\"1.准备工作\"></a>1.准备工作</h2><p>这里我用三台服务器来做演示：</p>\n<ol>\n<li>Nginx负载均衡:192.168.10.22:80</li>\n<li>Nginx Web1:192.168.10.23:80</li>\n<li>Nginx Web2:192.168.10.24:80<br><code>为了方便演示我这里用默认的80端口</code></li>\n</ol>\n<p>为了验证效果我们写一个简单html主页：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>这是服务器1<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">center</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是服务器1<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">center</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>将以上代码复制两份命名为index.html ，注意将第二份<code>&lt;title&gt;这是服务器1&lt;/title&gt; </code>改成2。</strong><br>##2.配置Web服务器<br>首先将index.html文件上传到两台服务器上服务器上</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir /data</span><br><span class=\"line\">$ mkdir /data/www</span><br><span class=\"line\"># 创建web目录</span><br></pre></td></tr></table></figure>\n<p>创建nginx配置文件/etc/nginx/conf.d/web.conf<br>Nginx的安装请参考上一篇<a href=\"%5Bhttps://www.jianshu.com/p/6535514ab5a7%5D(https://www.jianshu.com/p/6535514ab5a7)\">文章</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim /etc/nginx/conf.d/web.conf</span><br><span class=\"line\"># 复制下面配置文件</span><br><span class=\"line\">server  &#123;</span><br><span class=\"line\">        listen  80;</span><br><span class=\"line\">        server_name     localhost; </span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">        root /data/www;  # index.html文件的目录</span><br><span class=\"line\">        index   index.html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        error_page 404  /404.html;</span><br><span class=\"line\">        error_page 500 502 503 504 /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">        root /usr/share/nginx/html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"># 检查配置文件</span><br><span class=\"line\">$ nginx -t</span><br><span class=\"line\">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class=\"line\">nginx: configuration file /etc/nginx/nginx.conf test is successful</span><br><span class=\"line\"># 重新加载nginx配置</span><br><span class=\"line\">$ nginx -s reload</span><br></pre></td></tr></table></figure>\n<p>打开浏览器输入&lt;ip地址&gt;可以看到以下页面，说明web服务器配置成功。<br><img src=\"/images/Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/10.23.png\" alt=\"10.23.png\"><br>第二台web配置和第一台一样<br>##3.配置nginx负载均衡<br>首先我们创建配置文件/etc/nginx/conf.d/1.conf</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim /etc/nginx/conf.d/1.conf</span><br><span class=\"line\"># 写入下面的配置文件</span><br><span class=\"line\">server  &#123;</span><br><span class=\"line\">        listen  80;</span><br><span class=\"line\">        server_name     localhost;</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">        proxy_pass http://www;</span><br><span class=\"line\">        # 这里的www是自己设置的负载均衡池的名称</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        error_page 404  /404.html;</span><br><span class=\"line\">        error_page 500 502 503 504 /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">        root /usr/share/nginx/html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"># 负载均衡池，这里我用的轮询模式</span><br><span class=\"line\">upstream  www &#123;</span><br><span class=\"line\">     server    192.168.10.23;</span><br><span class=\"line\">     server    192.168.10.24;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"># 检查nginx配置文件</span><br><span class=\"line\">$ nignx -t</span><br><span class=\"line\">$ nginx -s reload</span><br></pre></td></tr></table></figure>\n<p>在浏览器里输入&lt;192.168.10.22&gt;我们可以看到页面正常显示。<br><img src=\"/images/Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/nginx-server1.png\" alt=\"1.png\"><br>我们再次刷新一下页面：<br><img src=\"/images/Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/nginx-server2.png\" alt=\"2.png\"><br>可以看到访问顺序是：服务器1&gt;服务器2&gt;服务器1&gt;服务器2，说明负载均衡配置成功。</p>\n<p>##3.Nginx负载均衡模式<br><strong>1.轮询</strong><br>轮询方式是Nginx负载默认的方式，顾名思义，所有请求都按照时间顺序分配到不同的服务上，如果服务Down掉，可以自动剔除，如下配置后轮训10.23服务和10.24服务。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upstream  www &#123;</span><br><span class=\"line\">     server    192.168.10.23;</span><br><span class=\"line\">     server    192.168.10.24;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>2.权重</strong><br>指定每个服务的权重比例，weight和访问比率成正比，通常用于后端服务机器性能不统一，将性能好的分配权重高来发挥服务器最大性能，如下配置后10.23服务的访问比率会是10.24服务的二倍。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upstream  dalaoyang-server &#123;</span><br><span class=\"line\">     server    192.168.10.23  weight=1;</span><br><span class=\"line\">     server    192.168.10.24  weight=2;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>3.iphash</strong><br>每个请求都根据访问ip的hash结果分配，经过这样的处理，每个访客固定访问一个后端服务，如下配置（ip_hash可以和weight配合使用）。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upstream  dalaoyang-server &#123;</span><br><span class=\"line\">       ip_hash; </span><br><span class=\"line\">       server    192.168.10.23 weight=1;</span><br><span class=\"line\">       server    192.168.10.24 weight=2;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>4.最少连接</strong><br>将请求分配到连接数最少的服务上。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upstream  dalaoyang-server &#123;</span><br><span class=\"line\">       least_conn;</span><br><span class=\"line\">       server    192.168.10.23 weight=1;</span><br><span class=\"line\">       server    192.168.10.24 weight=2;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>5.fair</strong><br>按后端服务器的响应时间来分配请求，响应时间短的优先分配。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upstream  dalaoyang-server &#123;</span><br><span class=\"line\">       server    192.168.10.23 weight=1;</span><br><span class=\"line\">       server    192.168.10.24 weight=2;</span><br><span class=\"line\">       fair;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","text":" 上篇文章讲了nginx的常见模块，这边文章将为大家讲一下nginx的负载均衡。 1.准备工作这里我用三台服务器来做演示： Nginx负载均衡:192.168.10.22:80 Nginx Web1:192.168.10.23:80 Nginx Web2:192.168.10.2...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"Nginx","slug":"Nginx","count":2,"path":"api/categories/Nginx.json"}],"tags":[{"name":"Nginx","slug":"Nginx","count":2,"path":"api/tags/Nginx.json"},{"name":"Linux","slug":"Linux","count":4,"path":"api/tags/Linux.json"},{"name":"教程","slug":"教程","count":3,"path":"api/tags/教程.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\"><span class=\"toc-text\">1.准备工作</span></a></li></ol>","author":{"name":"Brevin","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"Welcome to my blog <br/> I'm Brevin Bao.-a DevOps.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Docker的基础命令","uid":"6ec80148ccdf0bae5b573fc594b500be","slug":"Docker的基础命令","date":"2021-10-07T07:03:20.000Z","updated":"2022-10-24T05:03:43.470Z","comments":true,"path":"api/articles/Docker的基础命令.json","keywords":"Brevin, blog, 技术, 博客","cover":"/images/docker/docker.png","text":" 帮助命令 123docker version #显示docker的版本信息docker info #显示dcoker的系统信息，包括镜像和容器的数量docker [命令] --help #帮助命令 docker官方文档地址：https://docs.docker.com/com...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"14 mins."},"categories":[{"name":"Docker","slug":"Docker","count":6,"path":"api/categories/Docker.json"}],"tags":[{"name":"Docker","slug":"Docker","count":6,"path":"api/tags/Docker.json"}],"author":{"name":"Brevin","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"Welcome to my blog <br/> I'm Brevin Bao.-a DevOps.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Nginx快速入门","uid":"01b2f95cf7b3ad8e6df19f8a3034e6c8","slug":"Nginx快速入门","date":"2020-06-22T10:23:05.000Z","updated":"2022-10-20T08:51:47.811Z","comments":true,"path":"api/articles/Nginx快速入门.json","keywords":"Brevin, blog, 技术, 博客","cover":"/images/Nginx快速入门/nginx01.png","text":" Nginx(“engine x”)是一款是由俄罗斯的程序设计师Igor Sysoev所开发高性能的 Web和 反向代理 服务器，也是一个 IMAP/POP3/SMTP 代理服务器。在高连接并发的情况下，Nginx是Apache服务器不错的替代品。##安装Nginx这里我用Cen...","link":"","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[{"name":"Nginx","slug":"Nginx","count":2,"path":"api/categories/Nginx.json"}],"tags":[{"name":"Nginx","slug":"Nginx","count":2,"path":"api/tags/Nginx.json"},{"name":"Linux","slug":"Linux","count":4,"path":"api/tags/Linux.json"}],"author":{"name":"Brevin","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"Welcome to my blog <br/> I'm Brevin Bao.-a DevOps.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}