{"title":"Docker搭建redis集群","uid":"8ac33153f9328c8a2ab7b8c7aad02bd2","slug":"Docker-redis集群","date":"2022-10-02T02:34:20.000Z","updated":"2022-10-24T05:13:37.288Z","comments":true,"path":"api/articles/Docker-redis集群.json","keywords":null,"cover":"/images/Docker-redis集群/redis-docker.png","content":"<p><img src=\"/images/Docker-redis%E9%9B%86%E7%BE%A4/redis-docker.png\" alt=\"docker1.png\"><br><img src=\"/images/Docker-redis%E9%9B%86%E7%BE%A4/1240-20221024141644063.png\" alt=\"image.png\"></p>\n<h3 id=\"1、创建网卡\"><a href=\"#1、创建网卡\" class=\"headerlink\" title=\"1、创建网卡\"></a>1、创建网卡</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[root@vm22 home]# docker network create redis --subnet 172.38.0.0&#x2F;16\n39b4f9f17a4f49a5362c1ddc11c516841e2d1fac03aae3dc484f8f22fed28e00</code></pre>\n<h3 id=\"2、通过脚本创建六个redis配置\"><a href=\"#2、通过脚本创建六个redis配置\" class=\"headerlink\" title=\"2、通过脚本创建六个redis配置\"></a>2、通过脚本创建六个redis配置</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">for port in $(seq 1 6);\ndo\nmkdir -p &#x2F;mydata&#x2F;redis&#x2F;node-$&#123;port&#125;&#x2F;conf\ntouch &#x2F;mydata&#x2F;redis&#x2F;node-$&#123;port&#125;&#x2F;conf&#x2F;redis.conf\ncat &lt;&lt; EOF &gt;&#x2F;mydata&#x2F;redis&#x2F;node-$&#123;port&#125;&#x2F;conf&#x2F;redis.conf\nport 6379\nbind 0.0.0.0\ncluster-enabled yes\ncluster-config-file nodes.conf\ncluster-node-timeout 5000\ncluster-announce-ip 172.38.0.1$&#123;port&#125;\ncluster-announce-port 6379\ncluster-announce-bus-port 16379\nappendonly yes\nEOF\n# 启动6个容器\ndocker run -p 637$&#123;port&#125;:6379 -p 1637$&#123;port&#125; --name redis-$&#123;port&#125; \\\n-v &#x2F;mydata&#x2F;redis&#x2F;node-$&#123;port&#125;&#x2F;data:&#x2F;data \\\n-v &#x2F;mydata&#x2F;redis&#x2F;node-$&#123;port&#125;&#x2F;conf&#x2F;redis.conf:&#x2F;etc&#x2F;redis&#x2F;redis.conf \\\n-d --net redis --ip 172.38.0.1$&#123;port&#125; redis:5.0.9-alpine3.11 redis-server &#x2F;etc&#x2F;redis&#x2F;redis.conf\ndone</code></pre>\n<p><strong>通过命令手动启动容器</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 这里需要执行6次（1～6）\ndocker run -p 6371:6379 -p 16371:16379 --name redis-1 \\\n-v &#x2F;mydate&#x2F;redis&#x2F;node-1&#x2F;data:&#x2F;data \\\n-d --net redis --ip 172.38.0.11 redis:5.0.9-alpine3.11 redis-server &#x2F;etc&#x2F;redis&#x2F;redis.conf</code></pre>\n<p><strong>启动后查看容器是否运行</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[root@vm22 home]# docker ps\nCONTAINER ID   IMAGE                    COMMAND                  CREATED          STATUS          PORTS                                              NAMES\n1a7de933e9b5   redis:5.0.9-alpine3.11   &quot;docker-entrypoint.s…&quot;   5 hours ago      Up 5 hours      0.0.0.0:6376-&gt;6379&#x2F;tcp, 0.0.0.0:49191-&gt;16376&#x2F;tcp   redis-6\naf1b568638eb   redis:5.0.9-alpine3.11   &quot;docker-entrypoint.s…&quot;   5 hours ago      Up 5 hours      0.0.0.0:6375-&gt;6379&#x2F;tcp, 0.0.0.0:49190-&gt;16375&#x2F;tcp   redis-5\n5e2d03a59e15   redis:5.0.9-alpine3.11   &quot;docker-entrypoint.s…&quot;   5 hours ago      Up 5 hours      0.0.0.0:6374-&gt;6379&#x2F;tcp, 0.0.0.0:49189-&gt;16374&#x2F;tcp   redis-4\n309de9ba38fb   redis:5.0.9-alpine3.11   &quot;docker-entrypoint.s…&quot;   5 hours ago      Up 5 hours      0.0.0.0:6373-&gt;6379&#x2F;tcp, 0.0.0.0:49188-&gt;16373&#x2F;tcp   redis-3\n977f57c106ea   redis:5.0.9-alpine3.11   &quot;docker-entrypoint.s…&quot;   5 hours ago      Up 5 hours      0.0.0.0:6372-&gt;6379&#x2F;tcp, 0.0.0.0:49187-&gt;16372&#x2F;tcp   redis-2\n375ef095a557   redis:5.0.9-alpine3.11   &quot;docker-entrypoint.s…&quot;   5 hours ago      Up 5 hours      0.0.0.0:6371-&gt;6379&#x2F;tcp, 0.0.0.0:49192-&gt;16371&#x2F;tcp   redis-1</code></pre>\n<h3 id=\"3、创建集群\"><a href=\"#3、创建集群\" class=\"headerlink\" title=\"3、创建集群\"></a>3、创建集群</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 进入 redis-1\n[root@vm22 home]# docker exec -it redis-1 &#x2F;bin&#x2F;sh\n# redis镜像是精简版系统没有bash\n# 创建集群\n&#x2F;data # redis-cil --cluster create 172.38.0.11:6379 172.38.0.12:6379 172.38.0.13:6379 172.38.0.14:6379 172.38.0.1\n5:6379 172.38.0.16:6379 --cluster-repliceas 1\n# 查看集群是否创建成功\n&#x2F;data # redis-cli -c\n127.0.0.1:6379&gt; cluster nodes\n7eb510a2027c3b7d20b0a45517ab78019f53a77b 172.38.0.16:6379@16379 slave 7e2fa24a6b549cbadddfa8b281ae5ae457d7c4de 0 1664709975579 6 connected\n428e53fa38bcb638fb7e29278d36319d5c72333c 172.38.0.15:6379@16379 slave 40c0b3ea11e43ef9806f202824797c28f7222616 0 1664709975882 5 connected\n7e2fa24a6b549cbadddfa8b281ae5ae457d7c4de 172.38.0.12:6379@16379 master - 0 1664709975000 2 connected 5461-10922\n40c0b3ea11e43ef9806f202824797c28f7222616 172.38.0.11:6379@16379 myself,master - 0 1664709975000 1 connected 0-5460\nbc3a93e0655a4c635ffe08cc5a0ca2c854df60c2 172.38.0.14:6379@16379 slave d939b0a965bb54be4cb05be5f18a6cd43f910e62 0 1664709974000 4 connected\nd939b0a965bb54be4cb05be5f18a6cd43f910e62 172.38.0.13:6379@16379 master - 0 1664709974000 3 connected 10923-16383\n127.0.0.1:6379&gt; cluster info\ncluster_state:ok\ncluster_slots_assigned:16384\ncluster_slots_ok:16384\ncluster_slots_pfail:0\ncluster_slots_fail:0\ncluster_known_nodes:6\ncluster_size:3\ncluster_current_epoch:6\ncluster_my_epoch:1\ncluster_stats_messages_ping_sent:35066\ncluster_stats_messages_pong_sent:35812\ncluster_stats_messages_sent:70878\ncluster_stats_messages_ping_received:35807\ncluster_stats_messages_pong_received:35066\ncluster_stats_messages_meet_received:5\ncluster_stats_messages_received:70878</code></pre>","feature":true,"text":" 1、创建网卡[root@vm22 home]# docker network create redis --subnet 172.38.0.0&#x2F;16 39b4f9f17a4f49a5362c1ddc11c516841e2d1fac03aae3dc484f8f22fed...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"Docker","slug":"Docker","count":6,"path":"api/categories/Docker.json"}],"tags":[{"name":"Docker","slug":"Docker","count":6,"path":"api/tags/Docker.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81%E5%88%9B%E5%BB%BA%E7%BD%91%E5%8D%A1\"><span class=\"toc-text\">1、创建网卡</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81%E9%80%9A%E8%BF%87%E8%84%9A%E6%9C%AC%E5%88%9B%E5%BB%BA%E5%85%AD%E4%B8%AAredis%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">2、通过脚本创建六个redis配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3%E3%80%81%E5%88%9B%E5%BB%BA%E9%9B%86%E7%BE%A4\"><span class=\"toc-text\">3、创建集群</span></a></li></ol>","author":{"name":"Johnny","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"Welcome to my blog <br/> I'm Johnny Bao.-a DevOps.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"Dockerfile","uid":"75603112ad785d198fb30f0b34b1d632","slug":"Dockerflie","date":"2022-10-01T06:21:20.000Z","updated":"2022-10-24T05:13:33.338Z","comments":true,"path":"api/articles/Dockerflie.json","keywords":null,"cover":"/images/Dockerflie/image-20221024134827132.png","text":"Dockerfile1. 什么是DockerfileDockerfile可以认为是Docker镜像的描述文件，是由一系列命令和参数构成的脚本。主要作用是用来构建docker镜像的构建文件。 通过架构图可以看出通过DockerFile可以直接构建镜像 2. Dockerfile解析...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"Docker","slug":"Docker","count":6,"path":"api/categories/Docker.json"}],"tags":[{"name":"Docker","slug":"Docker","count":6,"path":"api/tags/Docker.json"}],"author":{"name":"Johnny","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"Welcome to my blog <br/> I'm Johnny Bao.-a DevOps.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}