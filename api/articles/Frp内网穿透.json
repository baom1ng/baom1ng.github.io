{"title":"Frp内网穿透","uid":"70dd287eea3c3b1a2c451ddd5cf0b7eb","slug":"Frp内网穿透","date":"2020-05-08T07:02:40.000Z","updated":"2022-10-20T08:42:07.816Z","comments":true,"path":"api/articles/Frp内网穿透.json","keywords":null,"cover":"https://raw.githubusercontent.com/fatedier/frp/dev/doc/pic/architecture.png","content":"<h1 id=\"Frp内网穿透\"><a href=\"#Frp内网穿透\" class=\"headerlink\" title=\"Frp内网穿透\"></a>Frp内网穿透</h1><p>Frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp 协议，为 http 和 https 应用协议提供了额外的能力，且尝试性支持了点对点穿透。<br>项目地址：<a href=\"https://github.com/fatedier/frp\">https://github.com/fatedier/frp</a></p>\n<h3 id=\"安装Frp\"><a href=\"#安装Frp\" class=\"headerlink\" title=\"安装Frp\"></a>安装Frp</h3><p>FRP 采用 Go 语言开发，支持 Windows、Linux、MacOS、ARM等多平台部署。<br>这里我用的是Centos 8，为了方便管理我们把解压后的目录重命名为 frp</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">wget https:&#x2F;&#x2F;github.com&#x2F;fatedier&#x2F;frp&#x2F;releases&#x2F;download&#x2F;v0.33.0&#x2F;frp_0.33.0_linux_amd64.tar.gz\ntar xzvf frp_0.33.0_linux_amd64.tar.gz\nmv frp_0.33.0_linux_amd64 frp</code></pre>\n\n<h3 id=\"FRP-服务端配置\"><a href=\"#FRP-服务端配置\" class=\"headerlink\" title=\"FRP 服务端配置\"></a>FRP 服务端配置</h3><p>配置 FRP 服务端的前提条件是需要一台具有<code>公网 IP</code>的设备。</p>\n<p>FRP 默认给出两个服务端配置文件，一个是简版的 frps.ini，另一个是完整版本 frps_full.ini。<br>通过frps.ini这个配置可以快速的搭建起一个 FRP 服务端。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ cat frps.ini\n\n[common]\nbind_port &#x3D; 7000 \n默认配置中监听的是 7000 端口，可根据自己实际情况修改。\n\n启动 FRP 服务端\n$ .&#x2F;frps -c .&#x2F;frps.ini\n2020&#x2F;05&#x2F;08 01:02:31 [I] [service.go:178] frps tcp listen on 0.0.0.0:7000\n2020&#x2F;05&#x2F;08 01:02:31 [I] [root.go:209] start frps success</code></pre>\n\n<h3 id=\"FRP-客户端配置\"><a href=\"#FRP-客户端配置\" class=\"headerlink\" title=\"FRP 客户端配置\"></a>FRP 客户端配置</h3><p>编辑 frpc.ini</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ vim frpc.ini\n\n[common]\n#server_addr 为 FRP 服务端的公网 IP\nserver_addr &#x3D; 192.168.50.11\n#server_port 为 FRP 服务端监听的端口\nserver_port &#x3D; 7000\n# Linu SSH服务\n[ssh]\n#网络协议\ntype &#x3D; tcp\n#填写客户端主机IP\nlocal_ip &#x3D; 192.168.50.12\n#Linux远程端口\nlocal_port &#x3D; 22\n#代理到服务端的端口这里我用6000\nremote_port &#x3D; 6000\n# Windows远程服务器\n[rdp]\n#网络协议\ntype &#x3D; tcp\n#填写客户端主机IP\nlocal_ip &#x3D; 192.168.50.13\n#Windows远程端口，默认是3389\nlocal_port &#x3D; 3389\n#代理到服务端的端口这里我用23389\nremote_port &#x3D; 23389\n启动 FRP 客户端\n$ .&#x2F;frpc -c .&#x2F;frpc.ini\n2020&#x2F;05&#x2F;07 23:18:53 [I] [service.go:282] [adbfac88ab64d72f] login to server success, get run id [adbfac88ab64d72f], server udp port [0]\n2020&#x2F;05&#x2F;07 23:18:53 [I] [proxy_manager.go:144] [adbfac88ab64d72f] proxy added: [ssh]\n2020&#x2F;05&#x2F;07 23:18:53 [I] [control.go:179] [adbfac88ab64d72f] [ssh] start proxy success</code></pre>\n<p>我们查看服务端的提示</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">2020&#x2F;05&#x2F;08 07:18:49 [I] [service.go:178] frps tcp listen on 0.0.0.0:7000\n2020&#x2F;05&#x2F;08 07:18:49 [I] [root.go:209] start frps success\n2020&#x2F;05&#x2F;08 07:18:55 [I] [service.go:432] [adbfac88ab64d72f] client login info: ip [192.168.50.12:39836] version [0.33.0] hostname [] os [linux] arch [amd64]\n2020&#x2F;05&#x2F;08 07:18:55 [I] [tcp.go:63] [adbfac88ab64d72f] [ssh] tcp proxy listen port [6000]\n2020&#x2F;05&#x2F;08 07:18:55 [I] [control.go:445] [adbfac88ab64d72f] new proxy [ssh] success</code></pre>\n<p>可以看到我们的SSH服务已经成功连接到服务端的6000端口。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ ssh root@192.168.50.11 -p 6000\nThe authenticity of host &#39;[192.168.50.11]:6000 ([192.168.50.11]:6000)&#39; can&#39;t be established.\nECDSA key fingerprint is SHA256:jwBjW8YC0VaFaTRTJaB8EJDuAZFZ6MBlh6pJbSVjngU.\nAre you sure you want to continue connecting (yes&#x2F;no)?</code></pre>\n<p>可以看到已经可以成功连接到服务器。</p>\n<h3 id=\"将服务添加至systemctl\"><a href=\"#将服务添加至systemctl\" class=\"headerlink\" title=\"将服务添加至systemctl\"></a>将服务添加至systemctl</h3><p>这里以frp服务端为例</p>\n<p>将<code>frp/systemd</code>目录下的<code>frps.service</code>复制到<code>/etc/systemd/system/</code>目录下</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ cp &#x2F;frp&#x2F;systemd&#x2F;frps.service &#x2F;etc&#x2F;systemd&#x2F;system\n复制配置文件和二进制文件到相对应的目录\n$ cp &#x2F;frps &#x2F;usr&#x2F;bin\n$ cp &#x2F;frps.ini &#x2F;etc&#x2F;frp\n重新加载服务配置\n$ systemctl daemon-reload\n设置为开机启动\n$ systemctl enable frps.service</code></pre>\n<p>到这里就完成了Frp服务的所有配置，这样就能随时随地的访问我们家中的电脑了。</p>\n","feature":true,"text":"Frp内网穿透Frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp 协议，为 http 和 https 应用协议提供了额外的能力，且尝试性支持了点对点穿透。项目地址：https://github.com/fatedier/frp 安装FrpFRP 采用 Go...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"教程","slug":"教程","count":1,"path":"api/categories/教程.json"}],"tags":[{"name":"-Linux -教程","slug":"Linux-教程","count":1,"path":"api/tags/Linux-教程.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Frp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F\"><span class=\"toc-text\">Frp内网穿透</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85Frp\"><span class=\"toc-text\">安装Frp</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#FRP-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">FRP 服务端配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#FRP-%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">FRP 客户端配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B0%86%E6%9C%8D%E5%8A%A1%E6%B7%BB%E5%8A%A0%E8%87%B3systemctl\"><span class=\"toc-text\">将服务添加至systemctl</span></a></li></ol></li></ol></li></ol>","author":{"name":"Johnny","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"Welcome to my blog <br/> I'm Johnny Bao.-a DevOps.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Nginx快速入门","uid":"01b2f95cf7b3ad8e6df19f8a3034e6c8","slug":"Nginx快速入门","date":"2020-06-22T10:23:05.000Z","updated":"2022-10-20T08:51:47.811Z","comments":true,"path":"api/articles/Nginx快速入门.json","keywords":null,"cover":"/images/Nginx快速入门/nginx01.png","text":" Nginx(“engine x”)是一款是由俄罗斯的程序设计师Igor Sysoev所开发高性能的 Web和 反向代理 服务器，也是一个 IMAP/POP3/SMTP 代理服务器。在高连接并发的情况下，Nginx是Apache服务器不错的替代品。##安装Nginx这里我用Cen...","link":"","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[{"name":"Nginx","slug":"Nginx","count":2,"path":"api/categories/Nginx.json"}],"tags":[{"name":"Nginx","slug":"Nginx","count":2,"path":"api/tags/Nginx.json"},{"name":"Linux","slug":"Linux","count":4,"path":"api/tags/Linux.json"}],"author":{"name":"Johnny","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"Welcome to my blog <br/> I'm Johnny Bao.-a DevOps.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Samba快速入门","uid":"d5477574fa77bf54e6e43f047273c678","slug":"Samba快速入门","date":"2022-08-29T09:35:23.000Z","updated":"2022-10-20T08:41:05.847Z","comments":true,"path":"api/articles/Samba快速入门.json","keywords":null,"cover":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg.linux.net.cn%2Fdata%2Fattachment%2Falbum%2F201604%2F19%2F062345dr9dg55vw3ul7ovk.jpg&refer=http%3A%2F%2Fimg.linux.net.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1668765999&t=c784db0c712b26ee7a2ea1ca9adcfecd","text":"安装Samba[root@localhost ~]# yum install samba -y [root@localhost ~]# cd &#x2F;etc&#x2F;samba&#x2F; [root@localhost samba]# ls lmhosts smb.con...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Linux","slug":"Linux","count":4,"path":"api/tags/Linux.json"},{"name":"教程","slug":"教程","count":3,"path":"api/tags/教程.json"}],"author":{"name":"Johnny","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"Welcome to my blog <br/> I'm Johnny Bao.-a DevOps.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}