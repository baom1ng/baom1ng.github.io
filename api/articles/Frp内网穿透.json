{"title":"Frp内网穿透","uid":"70dd287eea3c3b1a2c451ddd5cf0b7eb","slug":"Frp内网穿透","date":"2020-05-08T07:02:40.000Z","updated":"2022-10-24T03:10:10.357Z","comments":true,"path":"api/articles/Frp内网穿透.json","keywords":"Brevin, blog, 技术, 博客","cover":"/images/frp.png","content":"<h1 id=\"Frp内网穿透\"><a href=\"#Frp内网穿透\" class=\"headerlink\" title=\"Frp内网穿透\"></a>Frp内网穿透</h1><p>Frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp 协议，为 http 和 https 应用协议提供了额外的能力，且尝试性支持了点对点穿透。<br>项目地址：<a href=\"https://github.com/fatedier/frp\">https://github.com/fatedier/frp</a></p>\n<h3 id=\"安装Frp\"><a href=\"#安装Frp\" class=\"headerlink\" title=\"安装Frp\"></a>安装Frp</h3><p>FRP 采用 Go 语言开发，支持 Windows、Linux、MacOS、ARM等多平台部署。<br>这里我用的是Centos 8，为了方便管理我们把解压后的目录重命名为 frp</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/fatedier/frp/releases/download/v0.33.0/frp_0.33.0_linux_amd64.tar.gz</span><br><span class=\"line\">tar xzvf frp_0.33.0_linux_amd64.tar.gz</span><br><span class=\"line\">mv frp_0.33.0_linux_amd64 frp</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"FRP-服务端配置\"><a href=\"#FRP-服务端配置\" class=\"headerlink\" title=\"FRP 服务端配置\"></a>FRP 服务端配置</h3><p>配置 FRP 服务端的前提条件是需要一台具有<code>公网 IP</code>的设备。</p>\n<p>FRP 默认给出两个服务端配置文件，一个是简版的 frps.ini，另一个是完整版本 frps_full.ini。<br>通过frps.ini这个配置可以快速的搭建起一个 FRP 服务端。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat frps.ini</span><br><span class=\"line\"></span><br><span class=\"line\">[common]</span><br><span class=\"line\">bind_port = 7000 </span><br><span class=\"line\">默认配置中监听的是 7000 端口，可根据自己实际情况修改。</span><br><span class=\"line\"></span><br><span class=\"line\">启动 FRP 服务端</span><br><span class=\"line\">$ ./frps -c ./frps.ini</span><br><span class=\"line\">2020/05/08 01:02:31 [I] [service.go:178] frps tcp listen on 0.0.0.0:7000</span><br><span class=\"line\">2020/05/08 01:02:31 [I] [root.go:209] start frps success</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"FRP-客户端配置\"><a href=\"#FRP-客户端配置\" class=\"headerlink\" title=\"FRP 客户端配置\"></a>FRP 客户端配置</h3><p>编辑 frpc.ini</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim frpc.ini</span><br><span class=\"line\"></span><br><span class=\"line\">[common]</span><br><span class=\"line\">#server_addr 为 FRP 服务端的公网 IP</span><br><span class=\"line\">server_addr = 192.168.50.11</span><br><span class=\"line\">#server_port 为 FRP 服务端监听的端口</span><br><span class=\"line\">server_port = 7000</span><br><span class=\"line\"># Linu SSH服务</span><br><span class=\"line\">[ssh]</span><br><span class=\"line\">#网络协议</span><br><span class=\"line\">type = tcp</span><br><span class=\"line\">#填写客户端主机IP</span><br><span class=\"line\">local_ip = 192.168.50.12</span><br><span class=\"line\">#Linux远程端口</span><br><span class=\"line\">local_port = 22</span><br><span class=\"line\">#代理到服务端的端口这里我用6000</span><br><span class=\"line\">remote_port = 6000</span><br><span class=\"line\"># Windows远程服务器</span><br><span class=\"line\">[rdp]</span><br><span class=\"line\">#网络协议</span><br><span class=\"line\">type = tcp</span><br><span class=\"line\">#填写客户端主机IP</span><br><span class=\"line\">local_ip = 192.168.50.13</span><br><span class=\"line\">#Windows远程端口，默认是3389</span><br><span class=\"line\">local_port = 3389</span><br><span class=\"line\">#代理到服务端的端口这里我用23389</span><br><span class=\"line\">remote_port = 23389</span><br><span class=\"line\">启动 FRP 客户端</span><br><span class=\"line\">$ ./frpc -c ./frpc.ini</span><br><span class=\"line\">2020/05/07 23:18:53 [I] [service.go:282] [adbfac88ab64d72f] login to server success, get run id [adbfac88ab64d72f], server udp port [0]</span><br><span class=\"line\">2020/05/07 23:18:53 [I] [proxy_manager.go:144] [adbfac88ab64d72f] proxy added: [ssh]</span><br><span class=\"line\">2020/05/07 23:18:53 [I] [control.go:179] [adbfac88ab64d72f] [ssh] start proxy success</span><br></pre></td></tr></table></figure>\n<p>我们查看服务端的提示</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2020/05/08 07:18:49 [I] [service.go:178] frps tcp listen on 0.0.0.0:7000</span><br><span class=\"line\">2020/05/08 07:18:49 [I] [root.go:209] start frps success</span><br><span class=\"line\">2020/05/08 07:18:55 [I] [service.go:432] [adbfac88ab64d72f] client login info: ip [192.168.50.12:39836] version [0.33.0] hostname [] os [linux] arch [amd64]</span><br><span class=\"line\">2020/05/08 07:18:55 [I] [tcp.go:63] [adbfac88ab64d72f] [ssh] tcp proxy listen port [6000]</span><br><span class=\"line\">2020/05/08 07:18:55 [I] [control.go:445] [adbfac88ab64d72f] new proxy [ssh] success</span><br></pre></td></tr></table></figure>\n<p>可以看到我们的SSH服务已经成功连接到服务端的6000端口。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh root@192.168.50.11 -p 6000</span><br><span class=\"line\">The authenticity of host &#x27;[192.168.50.11]:6000 ([192.168.50.11]:6000)&#x27; can&#x27;t be established.</span><br><span class=\"line\">ECDSA key fingerprint is SHA256:jwBjW8YC0VaFaTRTJaB8EJDuAZFZ6MBlh6pJbSVjngU.</span><br><span class=\"line\">Are you sure you want to continue connecting (yes/no)?</span><br></pre></td></tr></table></figure>\n<p>可以看到已经可以成功连接到服务器。</p>\n<h3 id=\"将服务添加至systemctl\"><a href=\"#将服务添加至systemctl\" class=\"headerlink\" title=\"将服务添加至systemctl\"></a>将服务添加至systemctl</h3><p>这里以frp服务端为例</p>\n<p>将<code>frp/systemd</code>目录下的<code>frps.service</code>复制到<code>/etc/systemd/system/</code>目录下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cp /frp/systemd/frps.service /etc/systemd/system</span><br><span class=\"line\">复制配置文件和二进制文件到相对应的目录</span><br><span class=\"line\">$ cp /frps /usr/bin</span><br><span class=\"line\">$ cp /frps.ini /etc/frp</span><br><span class=\"line\">重新加载服务配置</span><br><span class=\"line\">$ systemctl daemon-reload</span><br><span class=\"line\">设置为开机启动</span><br><span class=\"line\">$ systemctl enable frps.service</span><br></pre></td></tr></table></figure>\n<p>到这里就完成了Frp服务的所有配置，这样就能随时随地的访问我们家中的电脑了。</p>\n","feature":true,"text":"Frp内网穿透Frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp 协议，为 http 和 https 应用协议提供了额外的能力，且尝试性支持了点对点穿透。项目地址：https://github.com/fatedier/frp 安装FrpFRP 采用 Go...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"教程","slug":"教程","count":3,"path":"api/categories/教程.json"}],"tags":[{"name":"-Linux -教程","slug":"Linux-教程","count":1,"path":"api/tags/Linux-教程.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Frp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F\"><span class=\"toc-text\">Frp内网穿透</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85Frp\"><span class=\"toc-text\">安装Frp</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#FRP-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">FRP 服务端配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#FRP-%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">FRP 客户端配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B0%86%E6%9C%8D%E5%8A%A1%E6%B7%BB%E5%8A%A0%E8%87%B3systemctl\"><span class=\"toc-text\">将服务添加至systemctl</span></a></li></ol></li></ol></li></ol>","author":{"name":"Brevin","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"Welcome to my blog <br/> I'm Brevin Bao.-a DevOps.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Docker相关技术简介","uid":"ae3533aad9ffb390f0136b0f330276f7","slug":"Docker相关技术简介","date":"2020-05-12T14:14:20.000Z","updated":"2022-10-24T03:34:50.335Z","comments":true,"path":"api/articles/Docker相关技术简介.json","keywords":"Brevin, blog, 技术, 博客","cover":"/images/docker/docker.png","text":" Docker 是一个开源的应用容器引擎，基于Go 语言并遵从 Apache2.0 协议开源。Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。 Docker简介什么是容器？容器是一种虚拟化...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"Docker","slug":"Docker","count":6,"path":"api/categories/Docker.json"}],"tags":[{"name":"Docker","slug":"Docker","count":6,"path":"api/tags/Docker.json"}],"author":{"name":"Brevin","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"Welcome to my blog <br/> I'm Brevin Bao.-a DevOps.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Samba快速入门","uid":"d5477574fa77bf54e6e43f047273c678","slug":"Samba快速入门","date":"2019-06-27T09:35:23.000Z","updated":"2022-10-24T05:04:23.456Z","comments":true,"path":"api/articles/Samba快速入门.json","keywords":"Brevin, blog, 技术, 博客","cover":"/images/samba.jpg","text":"安装Samba1234567[root@localhost ~]# yum install samba -y[root@localhost ~]# cd /etc/samba/[root@localhost samba]# lslmhosts smb.conf smb.conf....","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"教程","slug":"教程","count":3,"path":"api/categories/教程.json"}],"tags":[{"name":"Linux","slug":"Linux","count":4,"path":"api/tags/Linux.json"},{"name":"教程","slug":"教程","count":3,"path":"api/tags/教程.json"}],"author":{"name":"Brevin","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"Welcome to my blog <br/> I'm Brevin Bao.-a DevOps.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}